"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([[1774],{2141:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=s(85893),r=s(11151);const i={},a="DSPy",o={id:"references/llms/dspy",title:"DSPy",description:"Examples",source:"@site/docs/references/llms/dspy.md",sourceDirName:"references/llms",slug:"/references/llms/dspy",permalink:"/docs/references/llms/dspy",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/references/llms/dspy.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OpenAI",permalink:"/docs/references/llms/openai"},next:{title:"Gemini",permalink:"/docs/references/llms/google-gimini"}},l={},c=[{value:"Examples",id:"examples",level:2},{value:"Default device",id:"default-device",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"dspy",children:"DSPy"}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"default-device",children:"Default device"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# install DSPy: pip install dspy\nimport dspy\n\n# This sets up the language model for DSPy in this case we are using \n# mistral 7b through TGI (Text Generation Interface from HuggingFace)\nmistral = dspy.HFClientTGI(model=\'mistralai/Mistral-7B-Instruct-v0.2\', \n    port=8080, url=\'http://localhost\')\n\n# This sets the language model for DSPy.\ndspy.settings.configure(lm=mistral)\n\n# This is not required but it helps to understand what is happening\nmy_example = {\n    "question": "What system was final fantasy 1 made for?",\n    "answer": "NES",\n}\n\n# This is the signature for the predictor. It is a simple question and \n# answer model.\nclass BasicQA(dspy.Signature):\n    """Answer questions with short factoid answers."""\n\n    question = dspy.InputField()\n    answer = dspy.OutputField(desc="often between 1 and 5 words")\n\n# Define the predictor.\ngenerate_answer = dspy.Predict(BasicQA)\n\n# Call the predictor on a particular input.\npred = generate_answer(question=my_example[\'question\'])\n\n# Print the answer...profit :)\nprint(pred.answer)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(67294);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);