"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([[8714],{49493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(85893),r=t(11151);const s={},o="Visual Studio Code",a={id:"references/editors/vscode",title:"Visual Studio Code",description:"Starting a new project",source:"@site/docs/references/editors/vscode.md",sourceDirName:"references/editors",slug:"/references/editors/vscode",permalink:"/docs/references/editors/vscode",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/references/editors/vscode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Jupyter",permalink:"/docs/references/editors/jupyter"},next:{title:"SAS",permalink:"/docs/references/languages/sas"}},l={},c=[{value:"Starting a new project",id:"starting-a-new-project",level:2},{value:"Starting a new project with Pipenv",id:"starting-a-new-project-with-pipenv",level:2},{value:"Command Palette",id:"command-palette",level:2},{value:"Extensions",id:"extensions",level:2},{value:"Open VS Code from Chrome",id:"open-vs-code-from-chrome",level:2},{value:"Open VS Code from terminal",id:"open-vs-code-from-terminal",level:2},{value:"References",id:"references",level:2},{value:"See also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"visual-studio-code",children:"Visual Studio Code"}),"\n",(0,i.jsx)(n.h2,{id:"starting-a-new-project",children:"Starting a new project"}),"\n",(0,i.jsx)(n.p,{children:"Begin by creating a new project folder using the terminal. Once created, navigate into your new project folder and open it in Visual Studio Code (VS Code)."}),"\n",(0,i.jsx)(n.p,{children:"In the terminal, execute the following commands in the terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir my-project           # Creates a new directory named 'my-project'\ncd my-project              # Changes the current working directory to 'my-project'\npython3 -m venv .venv      # Create a virtual environment on MacOS and Linux.\nsource .venv/bin/activate  # Activate the virtual environment.\n.venv/bin/python3 -m pip install --upgrade pip  # Upgrade pip.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Create a new Python script file. Name it ",(0,i.jsx)(n.code,{children:"hello.py"})," and open it with VS Code"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"touch hello.py\ncode .\n"})}),"\n",(0,i.jsx)(n.p,{children:"Insert the following script into `hello.py:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import sys\nfrom prefect import flow, task\n\n\n@task\ndef display_info():\n    print("Current Python virtual environment:", sys.prefix)\n    print("Current Python interpreter:", sys.executable)\n    print("Python version:", sys.version)\n    print("Python search path:", sys.path)\n\n\n@flow\ndef main():\n    display_info()\n\n\nif __name__ == "__main__":\n    main()\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"In the VS Code terminal, execute the following command to run the script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 -m pip install prefect    \n"})}),"\n",(0,i.jsx)(n.p,{children:"Now run the script. This script should return something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"11:05:46.708 | INFO    | prefect.engine - Created flow run 'banana-mastodon' for flow 'main'\n11:05:46.750 | INFO    | Flow run 'banana-mastodon' - Created task run 'display_info-0' for task 'display_info'\n11:05:46.751 | INFO    | Flow run 'banana-mastodon' - Executing 'display_info-0' immediately...\nCurrent Python virtual environment: /Users/alain/Documents/GitHub/my-project/.venv\nCurrent Python interpreter: /Users/alain/Documents/GitHub/my-project/.venv/bin/python\nPython version: 3.9.6 (default, Nov 10 2023, 13:38:27) \n[Clang 15.0.0 (clang-1500.1.0.2.5)]\nPython search path: ['.', '/Users/alain/Documents/GitHub/my-project', '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python39.zip', '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9', '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload', '/Users/alain/Documents/GitHub/my-project/.venv/lib/python3.9/site-packages']\n11:05:46.795 | INFO    | Task run 'display_info-0' - Finished in state Completed()\n11:05:46.813 | INFO    | Flow run 'banana-mastodon' - Finished in state Completed('All states completed.')\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See also ",(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/python/python-tutorial",children:"Getting Started with Python in VS Code"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"starting-a-new-project-with-pipenv",children:"Starting a new project with Pipenv"}),"\n",(0,i.jsx)(n.p,{children:"If you haven't already installed Pipenv, you can do so by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip3 install pipenv\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you don't already have a Pipfile for your project, initialize one with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pipenv --python 3.8\n"})}),"\n",(0,i.jsx)(n.p,{children:"In the terminal, execute the following commands in the terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir my-project           # Creates a new directory named 'my-project'\ncd my-project              # Changes the current working directory to 'my-project'\npipenv install -d black    # Create a virtual environment and install dependencies. \npipenv run pip install 'deepspeed<=0.9.3'           \n"})}),"\n",(0,i.jsx)(n.p,{children:"After installation, you can check that the package has been installed correctly by using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pipenv run pip freeze\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Create a new Python script file. Name it ",(0,i.jsx)(n.code,{children:"hello.py"})," and open it with VS Code"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"touch hello.py  # Create a new Python script file.\ncode .          # Open the project in VS Code.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Insert the following script into `hello.py:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import sys\nfrom prefect import flow, task\n\n\n@task\ndef display_info():\n    print("Current Python virtual environment:", sys.prefix)\n    print("Current Python interpreter:", sys.executable)\n    print("Python version:", sys.version)\n    print("Python search path:", sys.path)\n\n\n@flow\ndef main():\n    display_info()\n\n\nif __name__ == "__main__":\n    main()\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the VS Code Command Palette, select the ",(0,i.jsx)(n.strong,{children:"Python: Select Interpreter"})," command and select the Python ",(0,i.jsx)(n.code,{children:"PipEnv"})," interpreter."]}),"\n",(0,i.jsx)(n.p,{children:"In the VS Code terminal, execute the following command to run the script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pipenv shell           # Activates the virtual environment created by pipenv\npipenv install prefect # Installs the 'prefect' package within the virtual environment\nblack hello.py         # Formats the 'hello.py' script using the Black code formatter\npython3 hello.py       # Runs the 'hello.py' script using Python 3\n"})}),"\n",(0,i.jsx)(n.p,{children:"This sequence of commands sets up a Python virtual environment, installs necessary packages,\nformats your script for readability, and then executes it."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat Pipfile\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:'[[source]]\nurl = "https://pypi.org/simple"\nverify_ssl = true\nname = "pypi"\n\n[packages]\nprefect = "*"\n\n[dev-packages]\nblack = "*"\n\n[requires]\npython_version = "3.9"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Pipfile"})," displayed here is part of the pipenv environment. It specifies the source for package installations,\nthe main and development packages required, and the Python version that this environment is compatible with.\nEssentially, it's a more structured and comprehensive version of the traditional `requirements.txt`` used in Python projects."]}),"\n",(0,i.jsx)(n.h2,{id:"command-palette",children:"Command Palette"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Command Palette: ",(0,i.jsx)(n.code,{children:"Ctrl + Shift + P"})," on Windows, ",(0,i.jsx)(n.code,{children:"Cmd + Shift + P"})," on Mac"]}),"\n",(0,i.jsx)(n.li,{children:"Preferences: Open User Settings"}),"\n",(0,i.jsx)(n.li,{children:"Python: Select Interpreter"}),"\n",(0,i.jsx)(n.li,{children:"Create: New Jupyter Notebook"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"extensions",children:"Extensions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Black Formatter"}),"\n",(0,i.jsx)(n.li,{children:"Flake8"}),"\n",(0,i.jsx)(n.li,{children:"isort"}),"\n",(0,i.jsx)(n.li,{children:"GitHub Copilot"}),"\n",(0,i.jsx)(n.li,{children:"Python"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"open-vs-code-from-chrome",children:"Open VS Code from Chrome"}),"\n",(0,i.jsxs)(n.p,{children:["Just type ",(0,i.jsx)(n.code,{children:"vscode.dev"})," to start VS Code from Chrome."]}),"\n",(0,i.jsx)(n.h2,{id:"open-vs-code-from-terminal",children:"Open VS Code from terminal"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Open the command palette."}),"\n",(0,i.jsxs)(n.li,{children:["Next, into the command palette type ",(0,i.jsx)(n.code,{children:"shell"})," and hit ",(0,i.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.em,{children:"Shell Command: Install 'code' command in PATH"})," and press ",(0,i.jsx)(n.code,{children:"Enter"}),". Once you hit enter, voil\xe0! You're all done."]}),"\n",(0,i.jsxs)(n.li,{children:["Once your terminal is open, you can open VS Code from it by typing ",(0,i.jsx)(n.code,{children:"$ code ."})," then hit ",(0,i.jsx)(n.code,{children:"enter"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://www.freecodecamp.org/news/how-to-open-visual-studio-code-from-your-terminal/",children:"How to open Visual Studio Code from your terminal"})]}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf",children:"Keyboard shortcuts for macOS"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"Visual Studio Code Official Site"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs",children:"Visual Studio Code Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=donjayamanne.vscode-jupytext",children:"VSCode Jupytext Extension"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode-insiders",children:"Visual Studio IntelliCode Insiders"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://medium.com/the-artificial-impostor/use-visual-studio-code-to-develop-python-programs-717d849c7106",children:"Use Visual Studio Code To Develop Python Programs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?time_continue=5&v=6YLMWU-5H9o",children:"Get Productive with Python in Visual Studio Code"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/python/data-science-tutorial",children:"Data science tutorial for Visual Studio Code"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/python/jupyter-support",children:"Jupyter Notebooks in Visual Studio Code documentation"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/features/codespaces",children:"GitHub Codespaces"})," and ",(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=XOSUt8Ih3zA",children:"Using Github Codespaces for the Course (by Luis Oliveira)"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(67294);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);